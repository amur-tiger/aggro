# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input AddFeedInput {
  type: String!
  uri: String!
}

"""
An opaque cursor to aid navigation. Should be sent back to the server as-is.
"""
scalar Cursor

type Feed {
  """Returns the paginated entries of the current feed."""
  entries(after: Cursor, before: Cursor, first: Int, last: Int): FeedEntryConnection!
  id: ID!
  title: String
}

type FeedEntry {
  id: ID!
  link: String
  title: String
}

"""
A pageable list for {@link FeedEntry} elements that also contains meta information.
"""
type FeedEntryConnection {
  """Contains the edges of the current page."""
  edges: [FeedEntryEdge!]!

  """Contains meta information about the current page."""
  pageInfo: PageInfo!

  """The total number of elements across all pages."""
  totalCount: Int!
}

"""Edge type for {@link FeedEntry} elements."""
type FeedEntryEdge {
  """The cursor pointing to the element within the {@link node} field."""
  cursor: Cursor!

  """The current element."""
  node: FeedEntry!
}

type Mutation {
  addFeed(input: AddFeedInput!): Feed!
}

"""Provides information about the current page."""
type PageInfo {
  """The cursor to the last element of the current page."""
  endCursor: Cursor!

  """Indicates whether more elements exist after the current page."""
  hasNextPage: Boolean!

  """Indicates whether more elements exist before the current page."""
  hasPreviousPage: Boolean!

  """The cursor to the first element of the current page."""
  startCursor: Cursor!
}

type Query {
  """Returns a list of feeds for the current user."""
  feeds: [Feed!]!
}
